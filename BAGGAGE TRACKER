#include <TinyGPS++.h>
#include <SoftwareSerial.h>
#include <ESP8266WiFi.h>

const char* server = "garbage-monitoring-syste-f1f56.appspot.com";

static const int RXPin = 5, TXPin = 4;   // GPIO 4=D2(conneect Tx of GPS) and GPIO 5=D1(Connect Rx of GPS)
static const uint32_t GPSBaud = 9600;    // if Baud rate 9600 didn't work, try 4800

TinyGPSPlus gps; // The TinyGPS++ object

WiFiClient client;

SoftwareSerial ss(RXPin, TXPin);  // The serial connection to the GPS device

char ssid[] = "Param";         // Name of your WiFi network
char pass[] = "87654321";      // WiFi password

void setup() {
  Serial.begin(9600);
  Serial.println();
  ss.begin(GPSBaud);

  Serial.print("Connecting to ");
  Serial.println(ssid);

  WiFi.begin(ssid, pass);
  
  int retries = 0;
  while (WiFi.status() != WL_CONNECTED && retries < 10) {
    delay(1000);
    Serial.print(".");
    retries++;
  }
  
  if (WiFi.status() == WL_CONNECTED) {
    Serial.println("");
    Serial.println("WiFi connected");
  } else {
    Serial.println("");
    Serial.println("WiFi connection failed");
    return;
  }
}

void checkGPS() {
  if (gps.charsProcessed() < 10) {
    Serial.println("No GPS detected: check wiring.");
  }
}

void loop() {
  delay(5000);
  checkGPS();

  while (ss.available() > 0) {
    if (gps.encode(ss.read())) {
      displayInfo();
    }
  }
}

void displayInfo() {
  if (gps.location.isValid()) {
    float latitude = gps.location.lat();
    float longitude = gps.location.lng();

    Serial.print("LAT:  ");
    Serial.println(latitude, 6);  // print float to 6 decimal places
    Serial.print("LONG: ");
    Serial.println(longitude, 6);

    if (WiFi.status() == WL_CONNECTED) {
      if (client.connect(server, 80)) {
        String postStr = "lat=" + String(latitude, 6) + "&long=" + String(longitude, 6);

        client.println("POST /location HTTP/1.1");
        client.println("Host: garbage-monitoring-syste-f1f56.appspot.com");
        client.println("Connection: close");
        client.println("Content-Type: application/x-www-form-urlencoded");
        client.print("Content-Length: ");
        client.println(postStr.length());
        client.println();
        client.print(postStr);

        delay(10); // give time to send the data
        
        if (client.connected()) {
          Serial.println("Data sent successfully");
        } else {
          Serial.println("Connection to server failed");
        }
        
        client.stop();
      } else {
        Serial.println("Failed to connect to server");
      }
    }
  }
}
